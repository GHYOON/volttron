##TODO there are many command tasks without a changed condition, this should be fixed.
---
- name: install VOLTTRON platform
  hosts: all
  vars:
    volttron_source_changed: no
  roles:
  - set-defaults
  - get-volttron-source
  tasks:
    - name: check on source updated
      debug:
        msg: "volttron_source_changed: {{volttron_source_changed}}"

    ##TODO do we really need to bootstrap multiple times? couldn't we
    ##     figure out the flags we want and the run one bootstrap?
    ##TODO there is no way to tell if the bootstrap steps are producing
    ##     changes or not, this is not idiomatic ansible
    - name: Bootstrap the python3 environment
      command:
        cmd: "python3 bootstrap.py"
        chdir: "{{ volttron_root }}"
        creates: "{{ volttron_root }}/env"

    - name: Boostrap rmq environment
      when: (message_bus == "rmq")
      command:
        cmd: "{{ volttron_root }}/env/bin/python bootstrap.py --rabbitmq"
        chdir: "{{ volttron_root }}"

    - name: Enabling web packages for environment
      when: (enable_web == True)
      command:
        cmd: "{{ volttron_root }}/env/bin/python bootstrap.py --web"
        chdir: "{{ volttron_root }}"

    - name: Enabling master driver packages for environment
      when: (enable_drivers == True)
      command:
        cmd: "{{ volttron_root }}/env/bin/python bootstrap.py --drivers"
        chdir: "{{ volttron_root }}"

    - name: Install extra requirements for this instance
      pip:
        virtualenv: "{{ansible_env.HOME}}/volttron/env"
        name: "{{ extra_requirements }}"
      environment:
        HTTP_PROXY: "{{ http_proxy }}"
      when: (extra_requirements | length) > 0

    - name: create environment activation script
      template:
        src: activate-instance-env.j2
        dest: "{{ ansible_env.HOME }}/activate-{{host_configuration['config']['instance-name'] | default('{{inventory_hostname}}')}}-env"
    - name: fail because the venv is wrong
      ##TODO: this ^^^
      fail:
        msg: need to make sure the volttron install venv is used above

    # configure the platform
    - name: ensure VOLTTRON_HOME exists
      file:
        path: "{{ volttron_home }}"
        state: directory
        mode: 0755
    - name: set instance name
      ini_file:
        path: "{{ volttron_home }}/config"
        section: volttron
        option: instance-name
        value: "{{ host_configuration['config']['instance-name'] | default('{{inventory_hostname}}') }}"
        mode: '0600'
        backup: yes
    - name: ensure platform configuration
      loop: "{{ host_configuration.config | dict2items }}"
      ini_file:
        path: "{{ volttron_home }}/config"
        section: volttron
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: '0600'
        backup: yes

    # For RMQ, do the extra bootstrapping/cert generation
    - fail:
        msg: "Platform configuration for RMQ is currently not implemented"
      when: (message_bus == "rmq")

    #- name: include ansible_venv
    #  include_role:
    #    name: ansible-venv

    #- name: copy the platform and agent configuration
    #  include_role:
    #    name: copy-configs
